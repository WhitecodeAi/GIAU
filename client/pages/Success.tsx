import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Check, Download, Home, Plus, MapPin, Calendar, User } from "lucide-react";
import { useNavigate, useLocation } from "react-router-dom";

interface SubmissionData {
  country: string;
  state: string;
  city: string;
  postalCode: string;
  latitude: string;
  longitude: string;
  altitude: string;
  climateType: string;
  terrainType: string;
  landUse: string;
  submittedAt: string;
  submittedBy: string;
  id: string;
}

export default function Success() {
  const [user, setUser] = useState<any>(null);
  const navigate = useNavigate();
  const location = useLocation();
  const submissionData = location.state?.submissionData as SubmissionData;

  useEffect(() => {
    const userData = localStorage.getItem("user");
    if (userData) {
      setUser(JSON.parse(userData));
    } else {
      navigate("/");
    }

    // Redirect if no submission data
    if (!submissionData) {
      navigate("/dashboard");
    }
  }, [navigate, submissionData]);

  const handleDownloadSummary = () => {
    if (!submissionData) return;

    const summary = `
Geographic Information Collection Summary
========================================

Submission ID: ${submissionData.id}
Submitted by: ${submissionData.submittedBy}
Submitted on: ${new Date(submissionData.submittedAt).toLocaleString()}

BASIC LOCATION DETAILS
----------------------
Country: ${submissionData.country}
State/Province: ${submissionData.state}
City/Town: ${submissionData.city}
Postal Code: ${submissionData.postalCode}

EXACT LOCATION DATA
-------------------
Latitude: ${submissionData.latitude}°
Longitude: ${submissionData.longitude}°
Altitude: ${submissionData.altitude} meters
Coordinates: ${submissionData.latitude}, ${submissionData.longitude}

GEOGRAPHIC ATTRIBUTES
---------------------
Climate Type: ${submissionData.climateType}
Terrain Type: ${submissionData.terrainType}
Land Use: ${submissionData.landUse}

Generated by Geographic Information Collection System
    `;

    const blob = new Blob([summary], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `geographic-data-${submissionData.id}.txt`;
    document.body.appendChild(a);
    a.click();
    window.URL.revokeObjectURL(url);
    document.body.removeChild(a);
  };

  if (!user || !submissionData) return null;

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 via-blue-50 to-white">
      <div className="desktop-content max-w-4xl mx-auto">
        {/* Success Header */}
        <div className="text-center py-12">
          <div className="w-20 h-20 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-6">
            <Check className="w-12 h-12 text-white" />
          </div>
          <h1 className="text-3xl font-bold text-gray-800 mb-4">
            Geographic Data Successfully Submitted!
          </h1>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            Your geographic information has been collected and processed. 
            Below is a summary of the data you submitted.
          </p>
        </div>

        {/* Submission Summary */}
        <div className="card-container">
          {/* Submission Details */}
          <div className="bg-green-50 border border-green-200 rounded-lg p-6 mb-8">
            <h3 className="text-lg font-semibold text-gray-800 mb-4">Submission Details</h3>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center">
                  <User className="w-5 h-5 text-green-600" />
                </div>
                <div>
                  <p className="text-sm text-gray-600">Submitted by</p>
                  <p className="font-medium text-gray-800">{submissionData.submittedBy}</p>
                </div>
              </div>
              
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
                  <Calendar className="w-5 h-5 text-blue-600" />
                </div>
                <div>
                  <p className="text-sm text-gray-600">Submission Date</p>
                  <p className="font-medium text-gray-800">
                    {new Date(submissionData.submittedAt).toLocaleDateString()}
                  </p>
                </div>
              </div>
              
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center">
                  <MapPin className="w-5 h-5 text-purple-600" />
                </div>
                <div>
                  <p className="text-sm text-gray-600">Submission ID</p>
                  <p className="font-medium text-gray-800 font-mono">#{submissionData.id}</p>
                </div>
              </div>
            </div>
          </div>

          {/* Data Summary */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
            {/* Location Summary */}
            <div className="space-y-6">
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
                <h4 className="font-semibold text-gray-800 mb-4">Location Summary</h4>
                <div className="space-y-3">
                  <div>
                    <span className="text-sm text-gray-600">Address:</span>
                    <p className="font-medium text-gray-800">
                      {submissionData.city}, {submissionData.state}
                    </p>
                    <p className="text-gray-700">
                      {submissionData.country} {submissionData.postalCode}
                    </p>
                  </div>
                  <div>
                    <span className="text-sm text-gray-600">Coordinates:</span>
                    <p className="font-medium text-gray-800 font-mono">
                      {submissionData.latitude}, {submissionData.longitude}
                    </p>
                  </div>
                  <div>
                    <span className="text-sm text-gray-600">Altitude:</span>
                    <p className="font-medium text-gray-800">
                      {submissionData.altitude} meters above sea level
                    </p>
                  </div>
                </div>
              </div>
            </div>

            {/* Environmental Summary */}
            <div className="space-y-6">
              <div className="bg-green-50 border border-green-200 rounded-lg p-6">
                <h4 className="font-semibold text-gray-800 mb-4">Environmental Characteristics</h4>
                <div className="space-y-3">
                  <div className="flex justify-between">
                    <span className="text-gray-600">Climate:</span>
                    <span className="font-medium text-gray-800">{submissionData.climateType}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">Terrain:</span>
                    <span className="font-medium text-gray-800">{submissionData.terrainType}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">Land Use:</span>
                    <span className="font-medium text-gray-800">{submissionData.landUse}</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Next Steps */}
          <div className="bg-gray-50 border border-gray-200 rounded-lg p-6 mb-8">
            <h4 className="font-semibold text-gray-800 mb-3">What Happens Next?</h4>
            <div className="space-y-2 text-gray-700">
              <p>• Your geographic data has been added to our comprehensive database</p>
              <p>• The information will be used for environmental analysis and research</p>
              <p>• You can download a summary of your submission for your records</p>
              <p>• Feel free to submit additional geographic locations anytime</p>
            </div>
          </div>

          {/* Action Buttons */}
          <div className="flex flex-wrap gap-4 justify-center">
            <Button onClick={handleDownloadSummary} className="btn-secondary">
              <Download size={16} className="mr-2" />
              Download Summary
            </Button>
            
            <Button onClick={() => navigate("/registration")} className="btn-accent">
              <Plus size={16} className="mr-2" />
              Add Another Location
            </Button>
            
            <Button onClick={() => navigate("/dashboard")} className="btn-primary">
              <Home size={16} className="mr-2" />
              Return to Dashboard
            </Button>
          </div>
        </div>

        {/* Footer Message */}
        <div className="text-center py-8">
          <p className="text-gray-600">
            Thank you for contributing to our geographic information database!
          </p>
        </div>
      </div>
    </div>
  );
}
